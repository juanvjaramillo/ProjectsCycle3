@page "/movies/create"
@inject NavigationManager navigationManager
@using BlazorProjectIII.Client.Pages.Components
@inject IServiceMovie iMovie

<FormMovie Movie="Movie" OnValidSubmit="Create" CategoriasNoSeleccionadas="CategoriasnoSeleccionadas"></FormMovie>

@code {
    private Movie Movie = new Movie();
    private List<Category> CategoriasnoSeleccionadas = new List<Category>();

    protected override void OnInitialized()
    {
        CategoriasnoSeleccionadas = new List<Category>(){
            new Category(){Id = 1, Name = "Comedia"},
            new Category(){Id = 2, Name = "Terror"},
            new Category(){Id = 3, Name = "Drama"},
            new Category(){Id = 4, Name = "Documental"},
            new Category(){Id = 5, Name = "CFI"},
            new Category(){Id = 6, Name = "Musical"},
            new Category(){Id = 7, Name = "Acci√≥n"}
        };

    }

@* Con el navigationManager vamos a redireccionar al suuario a otras rutas dentro del sistema*@
@*  void Create()
    {
    Console.WriteLine(navigationManager.Uri);
    navigationManager.NavigateTo("movie");
    Console.WriteLine($"Pelicula: {Movie.Name}");
    Console.WriteLine($"Premier: {Movie.Premier}");
    Console.WriteLine($"Esta en cartelera: {Movie.IsNowPlaying}");
    Console.WriteLine($"Poster: {Movie.Poster}");
    Console.WriteLine($"Sinopsis: {Movie.Synopsis}");
    } *@

    async void Create()
    {
        var httpResponse = await iMovie.Post("api/movies", Movie);
        if (httpResponse.Error)
        {
            var body = await httpResponse.HttpResponseMessage.Content.ReadAsStringAsync();
            Console.WriteLine(body);                
        }
        else
        {
            navigationManager.NavigateTo("/movies");
            Console.WriteLine(Movie.Name);
        }
    }  
}